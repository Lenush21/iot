/*
 * IOTest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.iot.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * IotAppIOPoint
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-19T17:32:14.018607400+04:00[Europe/Samara]")
public class IotAppIOPoint {
  @SerializedName("ioName")
  private String ioName = null;

  @SerializedName("requestPath")
  private String requestPath = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("requestSupported")
  private List<String> requestSupported = null;

  @SerializedName("status")
  private String status = null;

  public IotAppIOPoint ioName(String ioName) {
    this.ioName = ioName;
    return this;
  }

   /**
   * Get ioName
   * @return ioName
  **/
  @Schema(description = "")
  public String getIoName() {
    return ioName;
  }

  public void setIoName(String ioName) {
    this.ioName = ioName;
  }

  public IotAppIOPoint requestPath(String requestPath) {
    this.requestPath = requestPath;
    return this;
  }

   /**
   * Get requestPath
   * @return requestPath
  **/
  @Schema(description = "")
  public String getRequestPath() {
    return requestPath;
  }

  public void setRequestPath(String requestPath) {
    this.requestPath = requestPath;
  }

  public IotAppIOPoint address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public IotAppIOPoint requestSupported(List<String> requestSupported) {
    this.requestSupported = requestSupported;
    return this;
  }

  public IotAppIOPoint addRequestSupportedItem(String requestSupportedItem) {
    if (this.requestSupported == null) {
      this.requestSupported = new ArrayList<String>();
    }
    this.requestSupported.add(requestSupportedItem);
    return this;
  }

   /**
   * Get requestSupported
   * @return requestSupported
  **/
  @Schema(description = "")
  public List<String> getRequestSupported() {
    return requestSupported;
  }

  public void setRequestSupported(List<String> requestSupported) {
    this.requestSupported = requestSupported;
  }

  public IotAppIOPoint status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IotAppIOPoint iotAppIOPoint = (IotAppIOPoint) o;
    return Objects.equals(this.ioName, iotAppIOPoint.ioName) &&
        Objects.equals(this.requestPath, iotAppIOPoint.requestPath) &&
        Objects.equals(this.address, iotAppIOPoint.address) &&
        Objects.equals(this.requestSupported, iotAppIOPoint.requestSupported) &&
        Objects.equals(this.status, iotAppIOPoint.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ioName, requestPath, address, requestSupported, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IotAppIOPoint {\n");
    
    sb.append("    ioName: ").append(toIndentedString(ioName)).append("\n");
    sb.append("    requestPath: ").append(toIndentedString(requestPath)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    requestSupported: ").append(toIndentedString(requestSupported)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
